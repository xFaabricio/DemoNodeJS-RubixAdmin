{
  "_args": [
    [
      {
        "raw": "isomorphic-relay@^0.7.1",
        "scope": null,
        "escapedName": "isomorphic-relay",
        "name": "isomorphic-relay",
        "rawSpec": "^0.7.1",
        "spec": ">=0.7.1 <0.8.0",
        "type": "range"
      },
      "/Users/aaronfigueroa/Desktop/rubix/demo/node_modules/@sketchpixy/rubix"
    ]
  ],
  "_from": "isomorphic-relay@>=0.7.1 <0.8.0",
  "_id": "isomorphic-relay@0.7.4",
  "_inCache": true,
  "_location": "/isomorphic-relay",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/isomorphic-relay-0.7.4.tgz_1484397551077_0.9793584053404629"
  },
  "_npmUser": {
    "name": "dened",
    "email": "denvned@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "isomorphic-relay@^0.7.1",
    "scope": null,
    "escapedName": "isomorphic-relay",
    "name": "isomorphic-relay",
    "rawSpec": "^0.7.1",
    "spec": ">=0.7.1 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@sketchpixy/rubix"
  ],
  "_resolved": "https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.7.4.tgz",
  "_shasum": "40702fa50d172a69e4f60228aa6d1220c264ed2c",
  "_shrinkwrap": null,
  "_spec": "isomorphic-relay@^0.7.1",
  "_where": "/Users/aaronfigueroa/Desktop/rubix/demo/node_modules/@sketchpixy/rubix",
  "author": {
    "name": "Denis Nedelyaev"
  },
  "bugs": {
    "url": "https://github.com/denvned/isomorphic-relay/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.6.1"
  },
  "description": "Adds server side rendering support to React Relay",
  "devDependencies": {
    "babel-cli": "^6.7.5",
    "babel-plugin-transform-es2015-classes": "^6.6.5",
    "babel-plugin-transform-runtime": "^6.7.5",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-relay-plugin": "0.9.3",
    "react": "^15.0.1",
    "react-relay": "0.9.3"
  },
  "directories": {},
  "dist": {
    "shasum": "40702fa50d172a69e4f60228aa6d1220c264ed2c",
    "tarball": "https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.7.4.tgz"
  },
  "gitHead": "5828689477dd14b5dfc794b6d479c2ef6b61ecd2",
  "homepage": "https://github.com/denvned/isomorphic-relay",
  "keywords": [
    "isomorphic",
    "isomorphic-react-relay",
    "isomorphic-relay",
    "react",
    "react-relay",
    "relay",
    "server",
    "server-rendering",
    "server-side",
    "server-side-rendering"
  ],
  "license": "BSD-2-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "dened",
      "email": "denvned@gmail.com"
    }
  ],
  "name": "isomorphic-relay",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.8 || ^15.0.1",
    "react-relay": "0.9.3 - 0.10.0"
  },
  "readme": "Isomorphic React Relay [![npm version][npm-badge]][npm]\n======================\n\nEnables server-side rendering of [React Relay](https://facebook.github.io/relay/) containers.\n\nIf you use [react-router-relay](https://github.com/relay-tools/react-router-relay)\nyou might also become interested in\n[isomorphic-relay-router](https://github.com/denvned/isomorphic-relay-router).\n\nAcknowledgments\n---------------\n\nThank you to everyone who helped in the development of this project with suggestions,\ntesting, reported issues, pull-requests. Thank you to the Facebook employees who reviewed\nmy [contributions](https://github.com/facebook/relay/commits/master?author=denvned)\nto Relay, which helped to improve the server-side rendering support.\n\nInstallation\n------------\n\n    npm install --save isomorphic-relay\n\nHow to Use\n----------\n\nHere is an example with detailed comments of how *isomorphic-relay*\ncan be used **on the server:**\n```jsx\nimport IsomorphicRelay from 'isomorphic-relay';\n\nconst rootContainerProps = {\n  Container: MyContainer,\n  queryConfig: new MyRoute(),\n};\n\napp.get('/', (req, res, next) => {\n  // Create a Relay network layer. Note that on the server you need to specify\n  // the absolute URL of your GraphQL server endpoint.\n  // Here we also pass the user cookies on to the GraphQL server to allow them\n  // to be used there, e.g. for authentication.\n  const networkLayer = new Relay.DefaultNetworkLayer(\n    'http://localhost:8080/graphql',\n    { headers: { cookie: req.headers.cookie } },\n  );\n\n  // Use IsomorphicRelay.prepareData() to prefetch the data required for\n  // rendering of the Relay container.\n  IsomorphicRelay.prepareData(rootContainerProps, networkLayer).then(({ data, props }) => {\n    // Use <IsomorphicRelay.Renderer> to render your Relay container when the data is ready.\n    // Note that we cannot use the standard <Relay.Renderer> because at the first render\n    // it renders an empty/loading screen even when all the required data is already available.\n    // Unlike that, <IsomorphicRelay.Renderer> in that case renders normally right at\n    // the first render, and it is important for server side rendering\n    // where we do not have a second render.\n    const reactOutput = ReactDOMServer.renderToString(\n      <IsomorphicRelay.Renderer {...props} />\n    );\n\n    // To allow the data to be reused in the browser, serialize and embed it\n    // in the page together with the React markup.\n    res.render('index.ejs', {\n      preloadedData: JSON.stringify(data),\n      reactOutput\n    });\n  }).catch(next);\n});\n```\n\nAnd here is an example of the code that can be used **in the browser:**\n```jsx\nimport IsomorphicRelay from 'isomorphic-relay';\n\nconst environment = new Relay.Environment();\nenvironment.injectNetworkLayer(new Relay.DefaultNetworkLayer('/graphql'));\n\n// Deserialize the data preloaded on the server.\nconst data = JSON.parse(document.getElementById('preloadedData').textContent);\n\n// Use IsomorphicRelay.injectPreparedData() to inject the data into the Relay cache,\n// so Relay doesn't need to make GraphQL requests to fetch the data.\nIsomorphicRelay.injectPreparedData(environment, data);\n\n// Use IsomorphicRelay.prepareInitialRender() to wait until all the required data\n// is ready for rendering of the Relay container.\n// Note that it is important to use the same rootContainerProps as on the server to\n// avoid additional GraphQL requests.\nIsomorphicRelay.prepareInitialRender({ ...rootContainerProps, environment }).then(props => {\n  // Use <IsomorphicRelay.Renderer> to render your Relay container when the data is ready.\n  // Like on the server we cannot use the standard <Relay.Renderer>, bacause here\n  // we also need to render normally right at the initial render, otherwise we would get\n  // React markup mismatch with the markup prerendered on the server.\n  ReactDOM.render(<IsomorphicRelay.Renderer {...props} />, document.getElementById('root'));\n});\n```\n\nAlso see the [Star Wars](examples/star-wars) example.\n\n[npm-badge]: https://img.shields.io/npm/v/isomorphic-relay.svg\n[npm]: https://www.npmjs.com/package/isomorphic-relay\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/denvned/isomorphic-relay.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "prepublish": "npm run build"
  },
  "version": "0.7.4"
}
