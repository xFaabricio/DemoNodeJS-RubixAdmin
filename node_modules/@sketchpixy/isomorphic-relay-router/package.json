{
  "_args": [
    [
      {
        "raw": "@sketchpixy/isomorphic-relay-router@^0.8.5",
        "scope": "@sketchpixy",
        "escapedName": "@sketchpixy%2fisomorphic-relay-router",
        "name": "@sketchpixy/isomorphic-relay-router",
        "rawSpec": "^0.8.5",
        "spec": ">=0.8.5 <0.9.0",
        "type": "range"
      },
      "/Users/aaronfigueroa/Desktop/rubix/demo/node_modules/@sketchpixy/rubix"
    ]
  ],
  "_from": "@sketchpixy/isomorphic-relay-router@>=0.8.5 <0.9.0",
  "_id": "@sketchpixy/isomorphic-relay-router@0.8.5",
  "_inCache": true,
  "_location": "/@sketchpixy/isomorphic-relay-router",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/isomorphic-relay-router-0.8.5.tgz_1470986699154_0.5940583879128098"
  },
  "_npmUser": {
    "name": "shripadk",
    "email": "assortmentofsorts@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@sketchpixy/isomorphic-relay-router@^0.8.5",
    "scope": "@sketchpixy",
    "escapedName": "@sketchpixy%2fisomorphic-relay-router",
    "name": "@sketchpixy/isomorphic-relay-router",
    "rawSpec": "^0.8.5",
    "spec": ">=0.8.5 <0.9.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@sketchpixy/rubix"
  ],
  "_resolved": "https://registry.npmjs.org/@sketchpixy/isomorphic-relay-router/-/isomorphic-relay-router-0.8.5.tgz",
  "_shasum": "1232ac9a8ff3bb0de05ddc156ef4418dc8e610c1",
  "_shrinkwrap": null,
  "_spec": "@sketchpixy/isomorphic-relay-router@^0.8.5",
  "_where": "/Users/aaronfigueroa/Desktop/rubix/demo/node_modules/@sketchpixy/rubix",
  "author": {
    "name": "Denis Nedelyaev"
  },
  "bugs": {
    "url": "https://github.com/denvned/isomorphic-relay-router/issues"
  },
  "dependencies": {
    "@sketchpixy/react-router-relay": "^0.13.4",
    "babel-runtime": "^6.3.19"
  },
  "description": "Adds server side rendering support to react-router-relay",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-plugin-transform-es2015-classes": "^6.3.13",
    "babel-plugin-transform-runtime": "^6.3.13",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13"
  },
  "directories": {},
  "dist": {
    "shasum": "1232ac9a8ff3bb0de05ddc156ef4418dc8e610c1",
    "tarball": "https://registry.npmjs.org/@sketchpixy/isomorphic-relay-router/-/isomorphic-relay-router-0.8.5.tgz"
  },
  "homepage": "https://github.com/denvned/isomorphic-relay",
  "keywords": [
    "isomorphic",
    "isomorphic-react-relay",
    "isomorphic-relay",
    "react",
    "react-relay",
    "react-relay-router",
    "react-router",
    "react-router-relay",
    "relay",
    "router",
    "server",
    "server-rendering",
    "server-side",
    "server-side-rendering"
  ],
  "license": "BSD-2-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "shripadk",
      "email": "assortmentofsorts@gmail.com"
    }
  ],
  "name": "@sketchpixy/isomorphic-relay-router",
  "optionalDependencies": {},
  "peerDependencies": {
    "isomorphic-relay": "^0.7.1",
    "react": "^15.3.0"
  },
  "readme": "Isomorphic react-router-relay [![npm version][npm-badge]][npm]\n=============================\nAdds server side rendering support to\n[react-router-relay](https://github.com/relay-tools/react-router-relay) using\n[isomorphic-relay](https://github.com/denvned/isomorphic-relay).\n\nInstallation\n------------\n\n    npm install -S isomorphic-relay isomorphic-relay-router\n\nHow to use\n----------\n\nCreate a Relay network layer on the server.\nAnd if you are using `Relay.DefaultNetworkLayer`, specify the full url to the GraphQL endpoint:\n```javascript\nconst GRAPHQL_URL = `http://localhost:8080/graphql`;\n\nconst networkLayer = new Relay.DefaultNetworkLayer(GRAPHQL_URL);\n```\n\nWhen processing a request **on the server**, get `renderProps` using `match` function from\n*react-router* (see\n[here](https://github.com/reactjs/react-router/blob/v2.3.0/docs/guides/ServerRendering.md)),\nprepare the data using `IsomorphicRouter.prepareData`, then render React markup using\n`IsomorphicRouter.render` (pass the `props` returned by `IsomorphicRouter.prepareData`), and send\nthe React output along with the data to the client:\n```javascript\nimport IsomorphicRouter from 'isomorphic-relay-router';\n\napp.get('/*', (req, res, next) => {\n  match({routes, location: req.originalUrl}, (error, redirectLocation, renderProps) => {\n    if (error) {\n      next(error);\n    } else if (redirectLocation) {\n      res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n    } else if (renderProps) {\n      IsomorphicRouter.prepareData(renderProps, networkLayer).then(render, next);\n    } else {\n      res.status(404).send('Not Found');\n    }\n\n    function render({data, props}) {\n      const reactOutput = ReactDOMServer.renderToString(IsomorphicRouter.render(props));\n\n      res.render(path.resolve(__dirname, '..', 'views', 'index.ejs'), {\n        preloadedData: JSON.stringify(data),\n        reactOutput\n      });\n    }\n  });\n});\n```\n\nOn page load **in the browser**, create an instance of `Relay.Environment`, inject an Relay network\nlayer to it. Get `renderProps` using `match` function from *react-router*, inject the prepared data\nto the Relay store using `IsomorphicRelay.injectPreparedData`, then prepare initial render using\n`IsomorphicRelay.prepareInitialRender`, and render React using `Router` from *react-router* (pass\nthe `props` returned by `IsomorphicRouter.prepareInitialRender`):\n```javascript\nimport IsomorphicRouter from 'isomorphic-relay-router';\n\nconst environment = new Relay.Environment();\n\nenvironment.injectNetworkLayer(new Relay.DefaultNetworkLayer('/graphql'));\n\nconst data = JSON.parse(document.getElementById('preloadedData').textContent);\n\nIsomorphicRelay.injectPreparedData(environment, data);\n\nconst rootElement = document.getElementById('root');\n\n// use the same routes object as on the server\nmatch({routes, history: browserHistory}, (error, redirectLocation, renderProps) => {\n  IsomorphicRouter.prepareInitialRender(environment, renderProps).then(props => {\n    ReactDOM.render(<Router {...props} />, rootElement);\n  });\n});\n```\n\nExample\n-------\nSee [here](examples/todo).\n\n[npm-badge]: https://img.shields.io/npm/v/isomorphic-relay-router.svg\n[npm]: https://www.npmjs.com/package/isomorphic-relay-router\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/denvned/isomorphic-relay-router.git"
  },
  "scripts": {},
  "version": "0.8.5"
}
